{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "CodeS3Bucket": {
      "Type": "String"
    },
    "CodeS3Key": {
      "Type": "String"
    },
    "AlertTopicArn": {
      "Type": "String",
      "Default": "arn:aws:sns:us-east-1:878533158213:alert"
    }
  },
  "Resources": {
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": ["lambda.amazonaws.com"]
            },
            "Action": ["sts:AssumeRole"]
          }]
        },
        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"],
        "Policies": [{
          "PolicyName": "logs",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Effect": "Allow",
              "Action": [
                "logs:*"
              ],
              "Resource": "arn:aws:logs:*:*:*"
            }]
          }
        }, {
          "PolicyName": "dynamodb",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [{
              "Sid": "1",
              "Effect": "Allow",
              "Action": [
                "dynamodb:GetItem"
              ],
              "Resource": [
                {"Fn::Join" : ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/auth-token"]]}
              ]
            }]
          }
        }]
      }
    },
    "TokenTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [{
          "AttributeName": "token",
          "AttributeType": "S"
        }],
        "KeySchema": [{
          "AttributeName": "token",
          "KeyType": "HASH"
        }],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "auth-token"
      }
    },
    "TokenTableReadThrottleEventsAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "Namespace": "AWS/DynamoDB",
        "MetricName": "ReadThrottleEvents",
        "Dimensions": [{
          "Name": "TableName",
          "Value": {"Ref": "TokenTable"}
        }],
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "1",
        "Threshold": "1",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "AlarmActions": [{"Ref": "AlertTopicArn"}],
        "OKActions": [{"Ref": "AlertTopicArn"}]
      }
    },
    "TokenTableWriteThrottleEventsAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "Namespace": "AWS/DynamoDB",
        "MetricName": "WriteThrottleEvents",
        "Dimensions": [{
          "Name": "TableName",
          "Value": {"Ref": "TokenTable"}
        }],
        "Statistic": "Sum",
        "Period": "60",
        "EvaluationPeriods": "1",
        "Threshold": "1",
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "AlarmActions": [{"Ref": "AlertTopicArn"}],
        "OKActions": [{"Ref": "AlertTopicArn"}]
      }
    },
    "Lambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {"Ref": "CodeS3Bucket"},
          "S3Key": {"Ref": "CodeS3Key"}
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {"Fn::GetAtt": ["LambdaRole", "Arn"]},
        "Runtime": "nodejs4.3",
        "Timeout": 60
      }
    },
    "LambdaLogMonitoring": {
      "Type": "AWS::Logs::MetricFilter",
      "Properties": {
        "LogGroupName": {"Fn::Join": ["", ["/aws/lambda/", {"Ref": "Lambda"}]]},
        "FilterPattern": "Unhandled",
        "MetricTransformations": [{
          "MetricValue": "1",
          "MetricName": "UnhandledErrorCount",
          "MetricNamespace": "auth-service"
        }]
      }
    },
    "LambdaLogMonitoringAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [{"Ref": "AlertTopicArn"}],
        "OKActions": [{"Ref": "AlertTopicArn"}],
        "MetricName": "UnhandledErrorCount",
        "Namespace": "auth-service",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 1,
        "Threshold": 1,
        "ComparisonOperator": "GreaterThanOrEqualToThreshold"
      }
    },
    "LambdaErrorsAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmActions": [{"Ref": "AlertTopicArn"}],
        "OKActions": [{"Ref": "AlertTopicArn"}],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Statistic": "Sum",
        "Period": 60,
        "EvaluationPeriods": 1,
        "Threshold": 1,
        "ComparisonOperator": "GreaterThanOrEqualToThreshold",
        "Dimensions": [{
          "Name": "FunctionName",
          "Value": {"Ref": "Lambda"}
        }]
      }
    }
  },
  "Outputs": {
    "AuthLambdaArn": {
      "Value": {"Fn::GetAtt": ["Lambda", "Arn"]}
    }
  }
}
